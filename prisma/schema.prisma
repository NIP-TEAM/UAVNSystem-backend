generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserInfo {
  id          Int           @id @default(autoincrement())
  password    String
  name        String
  active      Boolean
  lastLogin   String
  email       String
  merchantId  Int           @default(1)
  networks    Network[]
  Uav         Uav[]
  Protocal    Protocol[]
  Contact     Contact[]
  ContactList ContactList[]

  @@index([email])
}

model Network {
  id            Int          @id @default(autoincrement())
  name          String       @db.VarChar(255)
  status        Int          @default(1)
  createAt      String       @db.VarChar(255)
  creator       UserInfo     @relation(fields: [creatorId], references: [id])
  creatorId     Int
  lastEdit      String       @db.VarChar(255)
  uavs          Uav[]
  merchantId    Int
  protocol      Protocol?    @relation(fields: [protocalId], references: [id])
  protocalId    Int?
  connectMap    Json?
  ContactList   ContactList? @relation(fields: [contactListId], references: [id])
  contactListId Int?
}

model Uav {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(255)
  networkInfo   Network  @relation(fields: [networkId], references: [id])
  networkId     Int
  uploadSpeed   Float    @default(0.0)
  downloadSpeed Float    @default(0.0)
  status        Int      @default(1)
  merchantId    Int
  createAt      String   @db.VarChar(255)
  creatorInfo   UserInfo @relation(fields: [creatorId], references: [id])
  creatorId     Int
}

model VerifyCode {
  email      String @id @unique
  code       String
  createTime String
}

model Protocol {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  type       String    @db.VarChar(255)
  networks   Network[]
  createAt   String
  updateAt   String
  creator    UserInfo  @relation(fields: [creatorId], references: [id])
  creatorId  Int
  feature    Json
  merchantId Int
}

model Contact {
  id             Int      @id @default(autoincrement())
  name           String   @db.VarChar(255)
  phone          String?  @db.VarChar(255)
  email          String   @db.VarChar(255)
  creator        UserInfo @relation(fields: [creatorId], references: [id])
  creatorId      Int
  createAt       String   @db.VarChar(255)
  updateAt       String   @db.VarChar(255)
  contactListIds Int[]
  note           String?   @db.VarChar(255)
  merchantId     Int
}

model ContactList {
  id          Int       @id @default(autoincrement())
  name        String
  creator     UserInfo  @relation(fields: [creatorId], references: [id])
  creatorId   Int
  createAt    String    @db.VarChar(255)
  updateAt    String    @db.VarChar(255)
  networkInfo Network[]
  merchantId  Int
}
